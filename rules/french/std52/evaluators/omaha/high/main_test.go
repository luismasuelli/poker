package high

import (
	"github.com/luismasuelli/poker-go/assets/cards"
	. "github.com/luismasuelli/poker-go/assets/cards/french"
	"testing"
)

func testHandPower(t *testing.T, expectedPower uint64, expectedBest uint32, cards ...cards.Card) {
	best, power := Power(cards, nil)
	if power != expectedPower || best != expectedBest {
		t.Errorf(
			"Testing hand: %v\nexpected power: %#064b\n     got power: %#064b\nexpected best: %#07b\n     got best: %#07b\n",
			cards, expectedPower, power, expectedBest, best,
		)
	}
}

func TestHandPowers(t *testing.T) {
	// Flush-straight.
	testHandPower(t, 0b1000000000000000000000000000001000000000000, 0b111001100, DA, HA, CT, CA, SJ, HJ, CK, CJ, CQ)
	testHandPower(t, 0b1000000000000000000000000000000000000001000, 0b011100110, C3, H5, HA, DJ, C9, H4, H2, H3, D2)
	testHandPower(t, 0b1000000000000000000000000000000000001000000, 0b001111100, C9, H9, S7, S4, S6, S5, S8, C5, D5)
	// 4 of a kind.
	testHandPower(t, 0b0111000000000000010000000000000000001000000, 0b111001100, D8, C8, SA, CA, H3, D3, HA, DA, S8)
	testHandPower(t, 0b0111000000000000000000000000011000000000000, 0b001111010, D4, S2, H3, C2, H2, D2, SA, S4, D3)
	testHandPower(t, 0b0111000000000000000000000010000010000000000, 0b101100110, C8, S5, C5, H3, D3, H5, D5, D8, SQ)
	// Full house.
	testHandPower(t, 0b0110000000000000000000000010000010000000000, 0b001110011, SQ, S5, SA, SK, C5, HQ, D5, D8, D3)
	testHandPower(t, 0b0110000000000000001000000000001000000000000, 0b101100110, SQ, SA, SK, DQ, HQ, CK, HA, H3, DK)
	testHandPower(t, 0b0110000000000000000000000000100000001000000, 0b111001010, D2, H3, H2, S3, S7, H7, C3, H8, D8)
	// Flush.
	testHandPower(t, 0b0101000000000000000000000000000100011110000, 0b101101010, CA, SK, DA, S7, H3, S9, S6, S4, S8)
	testHandPower(t, 0b0101000000000000000000000000001000101010010, 0b001111010, CA, HA, D4, H6, H3, H8, HT, H2, S2)
	testHandPower(t, 0b0101000000000000000000000000001000100100110, 0b110100011, DT, DA, D9, D8, S4, D7, S7, D4, D3)
	// Straights.
	testHandPower(t, 0b0100000000000000000000000000001000000000000, 0b001110110, H4, CT, SA, HA, CK, CJ, CQ, D9, H3)
	testHandPower(t, 0b0100000000000000000000000000000000000001000, 0b001111100, S8, S9, H5, HA, D4, H2, H3, D5, C2)
	testHandPower(t, 0b0100000000000000000000000000000000001000000, 0b010111100, D3, D2, S7, S4, S6, C5, D5, S8, H2)
	// 3 of a kind.
	testHandPower(t, 0b0011000000000000000001000000000011000000000, 0b100111010, D3, CT, D4, ST, DT, CJ, H8, H7, CQ)
	testHandPower(t, 0b0011000000000000010000000000000000000110000, 0b110010011, DA, SA, CA, C2, HA, C4, C3, H7, H6)
	testHandPower(t, 0b0011000000000000000000000001000000011000000, 0b100110011, C4, D4, D3, S4, H4, H8, H6, H2, S9)
	// Double Pair.
	testHandPower(t, 0b0010000000000000000101000000000000001000000, 0b011100011, CT, ST, C2, D8, H7, C8, HQ, CQ, H6)
	testHandPower(t, 0b0010000000000000010000001000000000100000000, 0b001110110, H3, DA, SA, D3, HT, C7, H7, C4, D4)
	testHandPower(t, 0b0010000000000000000000000001010100000000000, 0b100111100, C3, S8, C2, D2, S4, H4, S9, ST, CK)
	// Pair.
	testHandPower(t, 0b0001000000000000000001000000000010001100000, 0b011101010, D2, CT, D3, ST, D4, C8, CQ, S7, S6)
	testHandPower(t, 0b0001000000000000010000000000000000101100000, 0b110010011, DA, SA, D2, D3, HT, C4, H6, S8, H7)
	testHandPower(t, 0b0001000000000000000000000000011000110000000, 0b110010011, C2, DT, S3, H4, S2, S8, S7, S9, HA)
	//// Bust / High Card.
	//testHandPower(t, 0b0000000000000000000000000000000000011110100, 0b0011111, S7, S9, C6, H4, S8, H2, H3)
	//testHandPower(t, 0b0000000000000000000000000000001000101010100, 0b1101011, HA, D6, D2, D4, D3, H8, HT)
	//testHandPower(t, 0b0000000000000000000000000000001000100111000, 0b1100111, DT, CA, S5, H4, D2, D6, D7)
}
